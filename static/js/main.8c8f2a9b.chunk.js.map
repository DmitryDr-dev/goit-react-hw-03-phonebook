{"version":3,"sources":["AddContactForm/AddContactForm.module.css","ContactList/ContactListItem/ContactListItem.module.css","Filter/Filter.module.css","Section/Section.module.css","ContactList/ContactList.module.css","Container/Container.module.css","Container/Container.jsx","Section/Section.jsx","AddContactForm/AddContactForm.jsx","ContactList/ContactListItem/ContactListItem.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","sectionTitle","AddContactForm","nameInputId","uuidv4","numberInputId","handleInputChange","e","currentTarget","name","value","setState","handleSubmit","preventDefault","props","state","newContactId","newContact","id","onSubmit","clearState","number","this","addContactForm","addContactFormLabel","htmlFor","type","pattern","required","onChange","addContactFormInput","AddContactFormBtn","Component","ContactListItem","onDelete","contactWrap","contactName","contactNumber","contactDeleteBtn","onClick","ContactList","contacts","map","contactsItem","Filter","filterInputId","filter","filterLabel","filterInput","App","formSubmitHandler","prevState","normalizedNewName","toLowerCase","prevContacts","find","contact","alert","onDeleteContact","toDeleteId","changeFilter","getFilteredContacts","normalizedFilter","includes","contactsFromLocalStorage","JSON","parse","localStorage","getItem","prevProps","newContacts","length","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c8f2a9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"AddContactForm_addContactForm__1GJCH\",\"addContactFormInput\":\"AddContactForm_addContactFormInput__2tLc1\",\"AddContactFormBtn\":\"AddContactForm_AddContactFormBtn__2UnSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactWrap\":\"ContactListItem_contactWrap__1dCXM\",\"contactNumber\":\"ContactListItem_contactNumber__IHO_S\",\"contactName\":\"ContactListItem_contactName__nlYun\",\"contactDeleteBtn\":\"ContactListItem_contactDeleteBtn__3Yo8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__30yHq\",\"filterLabel\":\"Filter_filterLabel__38NuV\",\"filterInput\":\"Filter_filterInput__EA-r7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__9cluw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__pUVku\",\"contactsItem\":\"ContactList_contactsItem__Jl5dB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1iEiv\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.sectionTitle}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './AddContactForm.module.css';\r\n\r\nclass AddContactForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: '',\r\n      number: '',\r\n    };\r\n  }\r\n\r\n  // Unique IDs for inputs\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  // function to update state\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // function to send state to parent\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { props, state } = this;\r\n\r\n    const newContactId = uuidv4();\r\n    const newContact = { id: newContactId, ...state };\r\n\r\n    props.onSubmit(newContact);\r\n\r\n    this.clearState();\r\n  };\r\n\r\n  // method to clear state\r\n  clearState = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      state: { name, number },\r\n      handleSubmit,\r\n      handleInputChange,\r\n      nameInputId,\r\n      numberInputId,\r\n    } = this;\r\n\r\n    return (\r\n      <form className={s.addContactForm} onSubmit={handleSubmit}>\r\n        <label className={s.addContactFormLabel} htmlFor={nameInputId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={nameInputId}\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          className={s.addContactFormInput}\r\n        />\r\n        <label className={s.addContactFormLabel} htmlFor={numberInputId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={numberInputId}\r\n          value={number}\r\n          onChange={handleInputChange}\r\n          className={s.addContactFormInput}\r\n        />\r\n        <button type=\"submit\" className={s.AddContactFormBtn}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({ id, name, number, onDelete }) {\r\n  return (\r\n    <span className={s.contactWrap}>\r\n      <span>\r\n        <span className={s.contactName}>{name}:</span>\r\n        <span className={s.contactNumber}>{number}</span>\r\n      </span>\r\n      <button\r\n        className={s.contactDeleteBtn}\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </span>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul className={s.contacts}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contactsItem}>\r\n            <ContactListItem\r\n              name={name}\r\n              number={number}\r\n              id={id}\r\n              onDelete={onDelete}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  const filterInputId = uuidv4();\r\n\r\n  return (\r\n    <div className={s.filter}>\r\n      <label htmlFor={filterInputId} className={s.filterLabel}>\r\n        Filter by Name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        className={s.filterInput}\r\n        id={filterInputId}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\n\n// import components\nimport Container from './Container/Container';\nimport Section from './Section/Section';\nimport AddContactForm from './AddContactForm/AddContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { parse } from 'uuid';\n\nconst contacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      contacts: [...contacts],\n      filter: '',\n    };\n  }\n\n  // DONE All contacts are saved to local storage by adding/deleting a new contact\n  // DONE In case of first load contacts are retrieved from local storage\n\n  componentDidMount() {\n    const contactsFromLocalStorage = JSON.parse(\n      localStorage.getItem('contacts'),\n    );\n\n    if (contactsFromLocalStorage) {\n      this.setState({\n        contacts: [...contactsFromLocalStorage],\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevContacts = prevState.contacts;\n    const newContacts = this.state.contacts;\n\n    if (prevContacts.length !== newContacts.length) {\n      localStorage.setItem('contacts', JSON.stringify(newContacts));\n    }\n  }\n\n  // DONE function to process data send on form submission\n  // ! necessary to check whether the new contact is duplicated in current DB\n  formSubmitHandler = newContact => {\n    this.setState(prevState => {\n      const normalizedNewName = newContact.name.toLowerCase();\n      const prevContacts = prevState.contacts;\n\n      if (\n        prevContacts.find(\n          contact => contact.name.toLowerCase() === normalizedNewName,\n        )\n      ) {\n        return alert(`${newContact.name} already exists!`);\n      }\n\n      return { contacts: [...prevContacts, newContact] };\n    });\n  };\n\n  // DONE function to delete contact\n  onDeleteContact = toDeleteId => {\n    this.setState(prevState => {\n      const prevContacts = prevState.contacts;\n\n      return {\n        contacts: prevContacts.filter(contact => contact.id !== toDeleteId),\n      };\n    });\n  };\n\n  // DONE function to track changes on filter input\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  // DONE functions to show filtered contacts\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const {\n      state: { filter },\n      formSubmitHandler,\n      changeFilter,\n      getFilteredContacts,\n      onDeleteContact,\n    } = this;\n\n    return (\n      <Container>\n        <h1>Your Contacts</h1>\n        <Section>\n          <AddContactForm onSubmit={formSubmitHandler} />\n        </Section>\n        <Section title={'Contacts'}>\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactList\n            contacts={getFilteredContacts()}\n            onDelete={onDeleteContact}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}